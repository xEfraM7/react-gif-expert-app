{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAEaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OAEI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACrCN,EAAc,MAMlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAnBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCPlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAWH,GAF9C,+DAGAI,MAAQF,GAHR,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAE1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXvB,kBAedM,GAfc,4CAAH,sDCEPO,EAAc,SAAC,GAAiB,IAAhBH,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAE/B,OACI,sBAAKc,UAAU,gDAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCHHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAErB,ECFwB,SAACA,GAEzB,MAA0Bd,mBAAS,CAC/BqB,KAAK,GACLa,SAAQ,IAFZ,mBAAOC,EAAP,KAAcC,EAAd,KAgBA,OAXAC,qBAAU,WAENxB,EAASC,GACJwB,MAAK,SAAAC,GACEH,EAAS,CACLf,KAAKkB,EACLL,SAAQ,SAG1B,CAACpB,IAEIqB,EDhBuBK,CAAa1B,GAA/Ba,EAAZ,EAAON,KAAYa,EAAnB,EAAmBA,QAEnB,OACI,qCACI,oBAAIJ,UAAU,2CAAd,SAA0DhB,IACzDoB,GAAW,mBAAGJ,UAAU,mCAAb,qBACV,qBAAKA,UAAU,YAAf,SAEUH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEQA,GADGA,EAAIC,aEX9BgB,EAAe,WAExB,MAAqCzC,mBAAS,CAAC,kBAA/C,mBAAO0C,EAAP,KAAmB3C,EAAnB,KAKA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBACJ,6BAEQ2C,EAAWnB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEAA,SAAUA,GADLA,Y,MChBzB6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.a38c04bb.chunk.js","sourcesContent":["import React,{useState} from 'react'\r\nimport PropTypes from 'prop-types';\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n    \r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length > 2){\r\n            setCategories(cats => [inputValue,...cats]);\r\n            setInputValue(\"\");\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <form onSubmit={ handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={ handleInputChange}\r\n            />\r\n        </form>\r\n\r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes={\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","export const getGifs = async(category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI (category)}&limit=10&api_key=N7uWJbJEg3seVnmNTFJhoL0ysk0nMvXh`;\r\n    const resp = await fetch ( url ) ;\r\n    const {data} = await resp.json();\r\n    \r\n    const gifs = data.map( img => {\r\n        \r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n  return gifs;\r\n\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({title,url}) => {\r\n    //console.log( {id,title,url} );\r\n    return (\r\n        <div className='card animate__animated animate__fadeInLeftBig'>\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data:images,loading} = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3 className='animate__animated animate__fadeInLeftBig'>{category}</h3>\r\n            {loading && <p className='animate__animated animate__flash'>Loading</p>}\r\n            { <div className='card-grid'>\r\n                    {\r\n                        images.map( img =>(\r\n                            <GifGridItem \r\n                                key = {img.id}\r\n                                {...img}/>\r\n                        ))\r\n                    }\r\n            </div> }\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        loading:true,\r\n    });\r\n\r\n    useEffect(() => {\r\n        \r\n        getGifs( category )\r\n            .then(imgs =>{\r\n                    setState({\r\n                        data:imgs,\r\n                        loading:false\r\n                    });\r\n            })\r\n    },[category])\r\n\r\n    return state;\r\n}\r\n","import React,{useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid'\r\n\r\n\r\nexport const GifExpertApp = () => {\r\n    //const categories = ['One Punch Man','Koi to Uso', 'shigatsu wa kimi no uso']\r\n    const [categories, setCategories ] = useState(['One Punch Man'])\r\n    // const handleAdd = () =>{\r\n    //     //setCategories([...categories, 'Bunny girl senpai']);\r\n    //     setCategories(cats => [...cats, 'BunnyGirlSenpai']);\r\n    // }\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories } />\r\n            <hr />\r\n        <ol>\r\n            {\r\n                categories.map( category => (\r\n                    <GifGrid\r\n                    key={category}\r\n                    category={category}\r\n                    />\r\n                ))\r\n            }\r\n        </ol>\r\n\r\n        </>\r\n\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n// GifExpertApp\n\n\n\n\n"],"sourceRoot":""}